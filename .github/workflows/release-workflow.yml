name: Release Build and Website Deployment

on:
  workflow_dispatch:  # Manual trigger
  push:
    tags:
      - '*'           # Only run on tags
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') || (!contains(github.event.head_commit.message, 'skip ci') && !contains(github.event.head_commit.message, 'skip release')) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper version derivation

      - name: Pull and run Docker image
        run: |
          docker pull ghcr.io/magpern/bikebleflutter:latest
          # Create a directory for the app
          mkdir -p ${{ github.workspace }}/build
          chmod -R 777 ${{ github.workspace }}

      - name: Derive version from Git
        id: version
        run: |
          TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          SHA=$(git rev-parse --short HEAD)
          VERSION="${TAG#v}-${SHA}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Using version: $VERSION"

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Build APK with Docker
        run: |
          # Add custom gradle properties for proper path handling
          echo "org.gradle.java.home.use.file.uri=true" >> android/gradle.properties
          echo "org.gradle.native.file.normalization=true" >> android/gradle.properties
          
          # Run the build in Docker
          docker run --rm -v ${{ github.workspace }}:/app -w /app ghcr.io/magpern/bikebleflutter:latest \
            sh -c "flutter pub get && flutter build apk --release"
          
          # Create releases directory and copy APK
          mkdir -p releases
          cp build/app/outputs/flutter-apk/app-release.apk releases/BikeBLE_Config-${{ steps.version.outputs.version }}.apk
      
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: releases/BikeBLE_Config-${{ steps.version.outputs.version }}.apk
      
      - name: Upload to GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: releases/BikeBLE_Config-${{ steps.version.outputs.version }}.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate QR Code
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          sudo apt-get update
          sudo apt-get install -y qrencode
          # Get the tag name without 'v' prefix
          TAG=$(echo ${{ github.ref }} | sed 's/refs\/tags\///' | sed 's/^v//')
          DOWNLOAD_URL="https://github.com/magpern/BikeBLEFlutter/releases/latest/download/BikeBLE_Config-${{ steps.version.outputs.version }}.apk"
          qrencode -o docs/qrcode.png -s 10 "$DOWNLOAD_URL"
          # Verify QR code was generated
          ls -la docs/qrcode.png
          echo "QR code generated for URL: $DOWNLOAD_URL"
          
      - name: Update QR code in HTML
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          # Get the tag name without 'v' prefix
          TAG=$(echo ${{ github.ref }} | sed 's/refs\/tags\///' | sed 's/^v//')
          # Update QR code placeholder - using a more precise sed pattern
          sed -i 's|<div class="qr-placeholder" id="qr-code">.*</div>|<div class="qr-placeholder" id="qr-code"><img src="qrcode.png?v='$TAG'" alt="QR Code for App Download"></div>|g' docs/index.html
          # Update download link
          sed -i "s|https://github.com/magpern/Bike2FTMS/releases/latest/download/BikeBLE_Config-.*.apk|https://github.com/magpern/BikeBLEFlutter/releases/latest/download/BikeBLE_Config-${{ steps.version.outputs.version }}.apk|g" docs/index.html
          # Update version number
          sed -i "s|<span id=\"version-number\">.*</span>|<span id=\"version-number\">$TAG</span>|g" docs/index.html
          
      - name: Commit and push docs changes
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          # Create a new branch for the docs update
          git checkout -b docs-update-${{ steps.version.outputs.version }}
          git add docs/qrcode.png docs/index.html
          git commit -m "Update QR code and download link for release ${{ steps.version.outputs.version }}"
          # Push to the main branch
          git push origin HEAD:main 