name: Flutter CI/CD

on:
  workflow_dispatch:  #  Manual trigger
  push:
    tags:
      - '*'           #  Only run on tags
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    if: '!contains(github.event.head_commit.message, ''skip ci'') && !contains(github.event.head_commit.message, ''skip release'')'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Derive version from Git
        id: version
        run: |
          TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          SHA=$(git rev-parse --short HEAD)
          VERSION="${TAG#v}-${SHA}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Using version: $VERSION"

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: stable

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Get dependencies
        run: flutter pub get

      - name: Build release AAB
        run: flutter build appbundle --release

      - name: Rename AAB
        run: |
          mv build/app/outputs/bundle/release/app-release.aab build/app/outputs/bundle/release/BikeBLE_Config-${{ steps.version.outputs.version }}.aab
      
      - name: Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-aab
          path: build/app/outputs/bundle/release/BikeBLE_Config-${{ steps.version.outputs.version }}.aab
      
      - name: Upload to GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: build/app/outputs/bundle/release/BikeBLE_Config-${{ steps.version.outputs.version }}.aab
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: stable

      - name: Derive version from Git
        id: version
        run: |
          TAG=$(git describe --tags --abbrev=0)
          SHA=$(git rev-parse --short HEAD)
          VERSION="${TAG#v}-${SHA}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Download AAB artifact
        uses: actions/download-artifact@v3
        with:
          name: release-aab

      - name: Upload to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_SERVICE_ACCOUNT_JSON }}
          packageName: se.casaperne.BikeBLE_scanner
          releaseFiles: build/app/outputs/bundle/release/BikeBLE_Config-${{ steps.version.outputs.version }}.aab
          track: production
          status: completed
          
  deploy-website:
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Download APK artifact
        uses: actions/download-artifact@v3
        with:
          name: release-aab
          path: website/download
          
      - name: Generate QR Code
        run: |
          sudo apt-get update
          sudo apt-get install -y qrencode
          TAG=$(git describe --tags --abbrev=0)
          SHA=$(git rev-parse --short HEAD)
          VERSION="${TAG#v}-${SHA}"
          DOWNLOAD_URL="https://github.com/magpern/Bike2FTMS/releases/latest/download/BikeBLE_Config-${VERSION}.aab"
          qrencode -o website/qrcode.png -s 10 "$DOWNLOAD_URL"
          
      - name: Update QR code in HTML
        run: |
          sed -i 's|<div class="qr-placeholder" id="qr-code">.*<div class="qr-text">QR Code</div>.*</div>|<div class="qr-placeholder" id="qr-code"><img src="qrcode.png" alt="QR Code for App Download"></div>|g' website/index.html
          
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: website
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
